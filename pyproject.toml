[tool.poetry]
name = "metron-tagger"
version = "1.6.4"
description = "A program to write metadata from metron.cloud to a comic archive"
authors = ["Brian Pepple <bpepple@metron.cloud>"]
license = "GPL-3.0-or-later"
maintainers = ["Brian Pepple <bpepple@metron.cloud>"]
readme = "README.rst"
packages = [
    { include = "metrontagger" },
]
include = [
    { path = "tests", format = "sdist" }, { path = "CHANGELOG.md", format = "sdist" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
    "Topic :: Other/Nonlisted Topic",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
]
keywords = ["comics", "comic", "metadata", "tagging", "tagger"]

[tool.poetry.dependencies]
python = "^3.9"
mokkari = "^2.6.0"
questionary = "^2.0.1"
pyxdg = "^0.28"
darkseid = "^3.2.2"
lxml = "^4.9.2"
imagehash = "^4.3.1"
pandas = "^2.1.0"

[tool.poetry.scripts]
metron-tagger = "metrontagger.cli:main"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^2.12.1"
pytest-mock = "^3.6.1"
pre-commit = "^2.14.1"
tox = "^3.24.3"
ruff = "^0.1.2"

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 95
default_section = "THIRDPARTY"
known_first_party = []
known_third_party = ["PIL", "darkseid", "imagehash", "lxml", "mokkari", "pandas", "pytest", "questionary", "xdg"]

[tool.poetry.urls]
"Homepage" = "https://github.com/Metron-Project/metron-tagger"
"Bug Tracker" = "https://github.com/Metron-Project/metron-tagger/issues"

[tool.ruff]
line-length = 95
show-fixes = true
target-version = "py39"

[tool.ruff.lint]
select = [
    "A",
    "ANN",
    "ARG",
    "B",
    "BLE",
    "C40",
    "COM",
    "DTZ",
    "E",
    "ERA",
    "F",
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PT",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "T10",
    "T20",
    "TCH",
    "TID",
    "UP",
    "W",
    "YTT"
]
ignore = ["A001", "A003", "COM812", "COM819", "E501", "ISC001", "Q000", "Q001", "Q002", "Q003", "W191"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
combine-as-imports = true

[tool.ruff.per-file-ignores]
"tests/test_*.py" = ["ERA001", "S101", "SLF001"]

[tool.coverage.run]
source = ["metrontagger"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "test-results/coverage"

